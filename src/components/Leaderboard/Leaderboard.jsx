import React, { useState, useEffect } from "react";
import cls from "./Leaderboard.module.scss";
import CustomSelect from "../CustomSelect/CustomSelect";
import { calculateLeaderboard } from "./leaderboardUtils"; // –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –ø–æ–¥—Å—á—ë—Ç–∞

const Leaderboard = () => {
  const [teams, setTeams] = useState([]);
  const [matches, setMatches] = useState([]);
  const [leaderboard, setLeaderboard] = useState([]);
  const [sortType, setSortType] = useState("wins");
  const [matchTypeFilter, setMatchTypeFilter] = useState("all"); // üëà –¥–æ–±–∞–≤–∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É –º–∞—Ç—á–∞

  useEffect(() => {
    fetch("/teams.json")
      .then((response) => response.json())
      .then((data) => {
        setTeams(data);
      });
  }, []);

  useEffect(() => {
    fetch("/matches.json")
      .then((response) => response.json())
      .then((data) => {
        setMatches(data);
      });
  }, []);

  useEffect(() => {
    if (!teams.length || !matches.length) return;

    // –ü–æ–¥—Å—á—ë—Ç –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ç–∞–±–ª–∏—Ü—ã
    const result = calculateLeaderboard(teams, matches, sortType, matchTypeFilter);
    setLeaderboard(result);
  }, [teams, matches, sortType, matchTypeFilter]); // üëà –¥–æ–±–∞–≤–∏–ª–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å

  const columns = {
    points: ["rank", "name", "points"],
    wins: ["rank", "name", "wins"],
    losses: ["rank", "name", "losses"],
    played: ["rank", "name", "played"],
    goalsScored: ["rank", "name", "goalsScored"],
    goalsConceded: ["rank", "name", "goalsConceded"],
    goalDifference: ["rank", "name", "goalDifference"],
    rating: ["rank", "name", "rating"],
  };

  const columnHeaders = {
    rank: "–ú–µ—Å—Ç–æ",
    name: "–ö–æ–º–∞–Ω–¥–∞",
    points: "–û—á–∫–∏",
    wins: "–ü–æ–±–µ–¥—ã",
    losses: "–ü–æ—Ä–∞–∂–µ–Ω–∏—è",
    played: "–°—ã–≥—Ä–∞–Ω–æ",
    goalsScored: "–ó–∞–±–∏—Ç–æ",
    goalsConceded: "–ü—Ä–æ–ø—É—â–µ–Ω–æ",
    goalDifference: "–†–∞–∑–Ω–∏—Ü–∞ –º—è—á–µ–π",
    rating: "–†–µ–π—Ç–∏–Ω–≥ (%)",
  };

  return (
    <div className={cls.container}>
      <h1 className={cls.title}>–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤</h1>

      {/* üîΩ –§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É –º–∞—Ç—á–∞ */}
      <div className={cls.filterContainer}>
        <CustomSelect
          options={[
            { value: "all", label: "–í—Å–µ" },
            { value: "tournament", label: "–¢—É—Ä–Ω–∏—Ä" },
            { value: "league", label: "–õ–∏–≥–∞" },
            { value: "regular", label: "–¢–æ–≤–∞—Ä–∏—â–µ—Å–∫–∏–π" },
          ]}
          selectedOption={matchTypeFilter}
          onChange={setMatchTypeFilter}
        />
      </div>

      {/* üîΩ –ö–Ω–æ–ø–∫–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ */}
      <div className={cls.sortContainer}>
        <button className={cls.button} onClick={() => setSortType("points")}>–û</button>
        <button className={cls.button} onClick={() => setSortType("wins")}>–í</button>
        <button className={cls.button} onClick={() => setSortType("losses")}>–ü</button>
        <button className={cls.button} onClick={() => setSortType("goalsScored")}>–ó–ú</button>
        <button className={cls.button} onClick={() => setSortType("goalsConceded")}>–ü–ú</button>
        <button className={cls.button} onClick={() => setSortType("goalDifference")}>–†–ú</button>
        <button className={cls.button} onClick={() => setSortType("played")}>–ò</button>
        <button className={cls.button} onClick={() => setSortType("rating")}>–†</button>
      </div>

      <div className={cls.gridContainer}>
        <div className={cls.gridHeader}>
          {columns[sortType].map((column) => (
            <div key={column}>{columnHeaders[column]}</div>
          ))}
        </div>
        {leaderboard.map((team) => (
          <div key={team.id} className={cls.gridRow}>
            {columns[sortType].map((column) => (
              <div className={cls.rowItem} key={column}>
                {team[column]}
              </div>
            ))}
          </div>
        ))}
      </div>
    </div>
  );
};

export default Leaderboard;
